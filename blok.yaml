blok:
  chart: oci://892765726487.dkr.ecr.us-east-1.amazonaws.com/atomic-apps
  version: 0.15.0

clusters:
  dev-use2:
    image:
      tag: "0.5.0"
    env:
      FOO: BAR

name: trashcan
namespace: trashcan

replicaCount: 2

image:
  repository: ghcr.io/undeadops/trashcan

container:
  ports:
    - port: 3000
      name: svc
  command: 
    - "/app/trashcan"
  args: 
    - "-bucket"
    - "atmcdev-trashcan-tasklogs"
    - "-cert"
    - "/app/ssl/server.pem"
    - "-key"
    - "/app/ssl/server-key.pem"
    - "-client-ca"
    - "/app/ssl/ca.pem"

env:
  PORT: 3000

secretVolumes:
  - name: trashcan-certs
    mountPath: /app/ssl

service:
  type: LoadBalancer 
  annotations:
    external-dns.alpha.kubernetes.io/hostname: trashcan.use2.atmcdev.com
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: TCP
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: /ping
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: https
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: deregistration_delay.timeout_seconds=3
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: true
  ports:
    - port: 443
      name: https 
      targetPort: 3000 
      protocol: TCP 
 
ingress:
  enabled: false 
  className: "alb"
  annotations:
    kubernetes.io/ingress-class: "alb"
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-path: /ping
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS13-1-2-2021-06
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/backend-protocol: "HTTPS"
  hosts:
    - host: "trashcan.use2.atmcdev.com"
      paths:
        - path: "/"
          pathType: Prefix

serviceAccount:
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::303391922817:role/trashcan-svc"

iamRole:
  create: true
  name: trashcan-svc
  description: "trashcan k8s service role"
  sessionDuration: ""
  tags:
    environment: development
  oidcArn: "arn:aws:iam::303391922817:oidc-provider/oidc.eks.us-east-2.amazonaws.com/id/6B76A5FB41BB3CD0B3836D99595069F8"
  oidcURL: "oidc.eks.us-east-2.amazonaws.com/id/6B76A5FB41BB3CD0B3836D99595069F8"

iamPolicy:
  path: "/"
  description: "permit trashcan k8s service access to S3 bucket"
  policy: |
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Sid": "WebbyS3Bucket",
          "Action": [
            "s3:GetObject",
            "s3:ListBucket",
            "s3:PutObject"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:s3:::atmcdev-trashcan-tasklogs",
            "arn:aws:s3:::atmcdev-trashcan-tasklogs/*"
          ]
        }
      ]
    }

s3bucket:
  name: atmcdev-trashcan-tasklogs
  encrypted: true
